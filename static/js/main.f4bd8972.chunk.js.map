{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","style","color","Menu","menu","dishes","map","key","console","log","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","JSON","stringify","alert","feedback","firstname","lastname","telnum","email","agree","contactType","message","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","Component","imgStyle","maxHeight","maxWidth","RenderLeader","leaders","tag","left","middle","object","body","heading","About","title","list","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","Fragment","outline","onClick","isOpen","toggle","RenderDish","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentserrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4bd8972.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spiner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';\n","import React from 'react';\nimport {Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if(isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n        return(\n            <FadeTransform in \n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }} >\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n           \n        );\n    }\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                    isLoading={props.dishesLoading} \n                    errMess={props.dishesErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                    isLoading={props.promosLoading} \n                    errMess={props.promosErrMess} /> \n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                    isLoading={props.leadersLoading}\n                    errMess={props.leadersErrMess} />\n                </div>\n            </div>\n        </div>\n    );\n}\n \nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n    function RenderMenuItem({ dish }) {\n        return(\n            <Card>\n                    <Link to={`/menu/${dish.id}`} >\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                        <CardImgOverlay>\n                            <CardTitle >\n                                <p style={{color: \"white\"}}>{dish.name}</p>\n                            </CardTitle>\n                        </CardImgOverlay>\n                    </Link>\n            </Card>\n        );\n    }\n    \n\n\n    const Menu = (props) => {\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                    <RenderMenuItem dish={dish} />\n                </div>\n            );\n        });\n        console.log('Menu Component render is invoked');\n\n        if(props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n\n        else if(props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n        else\n            return ( \n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\n                        </Breadcrumb>\n\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div> \n                </div> \n            );\n    }\n\nexport default Menu;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is \" + JSON.stringify(values));\n        alert(\"Current state is \" + JSON.stringify(values));\n        const feedback = {\n            firstname: values.firstname,\n            lastname: values.lastname,\n            telnum: values.telnum,\n            email: values.email,\n            agree: values.agree,\n            contactType: values.contactType,\n            message: values.message\n        }\n        this.props.postFeedback(feedback);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        \n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n    \n                        <div className=\"col-12\">\n                            <h3>Contact Us</h3>\n                            <hr />\n                        </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            321, Clear Vision Alley<br />\n                            Brooklyn, New York<br />\n                            NEW YORK<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:albertoristorante@food.net\">albertoristorante@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model='feedback' onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" \n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }} />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" \n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }} />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                                \n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                    }} />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                                \n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, validEmail\n                                    }} />\n                                     <Errors \n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            validEmail: 'Invalid Email Adress'\n                                        }}\n                                    />\n                                </Col>\n                               \n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                            className=\"form-check-input\" /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" \n                                    className=\"form-control\" >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\"\n                                    className=\"form-control\" />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>    \n            </div>\n        );\n    }\n    \n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Stagger, Fade, FadeTransform } from 'react-animation-components';\n\nconst imgStyle={\n    maxHeight: 128,\n    maxWidth:128\n}\n\nfunction RenderLeader({leaders, isLoading, errMess}) {\n    if(isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n        return (\n            <div>\n                <Stagger in>\n                {leaders.map((leader) => {\n                return(\n                    <FadeTransform in \n                    transformProps={{\n                        exitTransform: 'scale(0.5) translateY(-50%)'\n                    }} >\n                        <Media tag =\"li\" key={leader.id}>\n                            <Media left middle>\n                                <Media object src={baseUrl + leader.image} alt={leader.name} style={imgStyle}/>\n                            </Media>\n                \n                            <Media body className=\"ml-5\">\n                                <Media heading>{leader.name}</Media>\n                                <p>{leader.designation}</p>\n                                <p>{leader.description}</p>\n                                <br />\n                            </Media>\n                        </Media>\n                    </FadeTransform>\n\n                );\n            })}\n                </Stagger>\n            </div>\n        );\n}\n\nfunction About(props) {\n    \n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2015, Alberto Ristorante Italiano quickly established itself as a culinary icon par excellence in New York. With its unique brand of italian fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in New York.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Chef's Food</em>, a successful chain started by our CEO, Ms. Cristina Rodriguez, that featured for the first time an italian restaurant with spanish influences. </p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">23 Sep. 2015</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">NY Italian Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                    <RenderLeader leaders={props.leaders}\n                    isLoading={props.leadersLoading}\n                    errMess={props.leadersErrMess} />\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button,\n     BreadcrumbItem, Breadcrumb, Row, Col, Label, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger} from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\n    class CommentForm extends Component {\n\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                isModalOpen: false\n            };\n\n            this.toggleModal = this.toggleModal.bind(this);\n        }\n\n        toggleModal() {\n            this.setState({\n                isModalOpen: !this.state.isModalOpen\n            });\n        }\n\n        handleSubmit(values) {\n            this.toggleModal();\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n        }\n        \n        render () {\n            return(\n                <React.Fragment>\n                \n                <Button outline onClick={this.toggleModal} >\n                    <span className=\"fa fa-pen fa-lg\"></span> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)} >\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" name=\"rating\" \n                                    className=\"form-control\" >\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" \n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }} />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\"\n                                    className=\"form-control\" />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col md={12}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n               \n\n                </React.Fragment>\n            );\n        }\n\n    }\n\n    \n\n    function RenderDish({dish}) {\n            return(\n                <div className=\"col-12 col-md-5 m-1\">\n                    <FadeTransform in \n                        transformProps={{\n                            exitTransform: 'scale(0.5) translateY(-50%)'\n                    }} >\n                        <Card>\n                            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                            <CardBody>\n                                <CardTitle> {dish.name}</CardTitle>\n                                <CardText>{dish.description}</CardText>\n                            </CardBody>\n                        </Card>\n                    </FadeTransform>\n                </div>\n            );\n    }\n\n\n    function RenderComments({comments, postComment, dishId}) {       \n            return (\n                <div className=\"col-12 col-md-5 m-1\">\n                    <h4>Comments</h4>\n                    <ul className=\"list-unstyled\">\n                        <Stagger in>\n                            {comments.map((comment) => {\n                                return (\n                                    <Fade in>\n                                        <li key={comment.id}>\n                                        <div>{comment.comment}</div>\n                                        <br />\n                                        <div>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.date)))}</div>\n                                        <br />\n                                        </li>\n                                    </Fade>\n                                ); \n                            })}\n                        </Stagger>\n                    </ul>\n                    <CommentForm dishId={dishId} postComment={postComment} />\n                </div>\n            );\n    }\n\n\n    const DishDetail = (props) => {\n\n        console.log('Dishdetail render is invoked');\n        \n        if(props.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n\n        else if(props.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        else if(props.dish != null)\n        return ( \n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                    <div className=\"row\">\n                        <RenderDish dish = {props.dish} />\n                        <RenderComments comments = {props.comments}\n                            postComment={props.postComment}\n                            dishId={props.dish.id} />\n                    </div>\n            </div>\n            \n        );\n\n        else \n            return (\n                <div></div>\n            );\n    }\n\n\nexport default DishDetail;\n","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n     Button, Modal, ModalHeader, ModalBody, Label, Form, FormGroup, Input } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\n\nclass Header extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false \n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Alberto Ristorante Italiano\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/home\">\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                    <span className=\"fa fa-info fa-lg\"></span> About Us\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/menu\">\n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\n                                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <Button outline onClick={this.toggleModal}>\n                                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                </Button>\n                            </NavItem>\n                        </Nav>\n                        </Collapse>\n                        \n                    </div>\n                </Navbar>\n\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Alberto Ristorante Italiano</h1>\n                                <p>We tale inspiration from Italy's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary sense! </p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li ><Link to=\"/home\" className=\"link\">Home</Link></li>\n                        <li><Link to=\"/aboutus\" className=\"link\">About</Link></li>\n                        <li><Link to=\"/menu\" className=\"link\">Menu</Link></li>\n                        <li><Link to=\"/contactus\" className=\"link\">Contact</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a className=\"link\" href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2021 Alberto Ristorante Italiano</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes'; // importing all thats exported from actiontypes\nimport { baseUrl } from '../shared/baseUrl'; //there we need to comm w/ server\n\nexport const postFeedback = (feedback) => (dispatch) => {\n    feedback.date = new Date().toISOString()\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(feedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if(response.ok) {\n                return response;      \n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        \n        \n        .then(response => response.json())\n        .then(values => alert(\"Thank you for your feedback!\\n \" + JSON.stringify(values)) )\n        .catch(error => { console.log('Post feedback ', error.message);\n            alert('Your feedback could not be posted\\nError: ' + error.message)});\n}\n\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT, \n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) =>  { //bcs it s a thunk\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else  {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('Post comments ', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message)});\n}\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else  {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else  {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({ //receiving comments as param\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else  {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else  {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n\n//feedback\n\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)), //dispatch will send the action as a parameter\n  fetchDishes: () => {dispatch(fetchDishes())},\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchPromos: () => {dispatch(fetchPromos())},\n  fetchLeaders: () => {dispatch(fetchLeaders())},\n  postFeedback: (feedback) => dispatch(postFeedback(feedback))\n});\n\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n    \n  }\n  \n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render () {\n\n    const HomePage = () => {\n      return(\n          <Home \n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n              dishesLoading={this.props.dishes.isLoading}\n              dishesErrMess={this.props.dishes.errMess}\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n              promosLoading={this.props.promotions.isLoading}\n              promosErrMess={this.props.promotions.errMess}\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n              leadersLoading={this.props.leaders.isLoading}\n              leadersErrMess={this.props.leaders.errMess}\n          />\n      );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n          <DishDetail\n            dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \n            isLoading={this.props.dishes.isLoading}\n            errMess={this.props.dishes.errMess}\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n            commentserrMess={this.props.comments.errMess}\n            postComment={this.props.postComment}\n            />\n      );\n    };\n\n    const Aboutus = () => {\n      return (\n        <About \n        leaders={this.props.leaders.leaders}\n        leadersLoading={this.props.leaders.isLoading}\n        leadersErrMess={this.props.leaders.errMess}\n        />\n      );\n    };\n\n    const Contactus = () => {\n      return(\n        <Contact\n        postFeedback={this.props.postFeedback}\n        resetFeedbackForm={this.props.resetFeedbackForm}\n        />\n      )\n    }\n    \n    return (\n      <div>\n      <Header />\n      <TransitionGroup>\n        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n          <Switch>\n            <Route path=\"/home\" component={HomePage} />\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\n            <Route path=\"/menu/:dishId\" component={DishWithId} />\n            <Route path=\"/aboutus\" component={Aboutus} />\n            <Route exact path=\"/contactus\" component={Contactus} />\n            <Redirect to=\"/home\" />\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n      \n      <Footer />\n      </div>\n    );\n  }\n  \n}\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = { isLoading: true,\n    errMess: null,\n    dishes:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments:[]};    \n\n        case ActionTypes.ADD_COMMENT: \n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)}; \n\n            \n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = { \n    isLoading: true,\n    errMess: null,\n    promotions:[]\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders:[]\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\n\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render () {\n    return (\n      <Provider store={store}>\n          <BrowserRouter>\n            <div>\n              <Main /> \n            </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n  \n}\n\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger) \n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}